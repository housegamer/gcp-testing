steps:
# - name: 'google/cloud-sdk:latest'
#   id: Create .Env File
#   entrypoint: 'bash'
#   args:
#   - -xe
#   - -c
#   - |
#     echo '$$test-ci' > .env
#     cp /workspace/.env /workspace/backend
#   secretEnv: ['test-ci']

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'Create Backend .Env File'
  args:
  - -xe
  - -c
  - |
    gcloud secrets versions access latest --secret='test-ci' --format='get(payload.data)' | base64 -d > .env
    cat .env
    cp /workspace/.env /workspace/backend

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  id: 'Create Frontend .Env File'
  args:
  - -xe
  - -c
  - |
    gcloud secrets versions access latest --secret='user-data' --format='get(payload.data)' | base64 -d > .env
    cat .env
    cp /workspace/.env /workspace/frontend

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_BACKEND:v.$_TAG_BACKEND.${SHORT_SHA}', './backend']
  id: 'Build backend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_BACKEND:v.$_TAG_BACKEND.${SHORT_SHA}']
  id: 'Push backend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_FRONTEND:v.$_TAG_FRONTEND.${SHORT_SHA}', './frontend']
  id: 'Build Frontend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_FRONTEND:v.$_TAG_FRONTEND.${SHORT_SHA}']
  id: 'Push Frontend'

- name: 'google/cloud-sdk:latest'
  id: 'Delivery Pipeline'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region $LOCATION
    gcloud deploy apply --file deploy/dev.yaml --region $LOCATION

- name: 'google/cloud-builders/gcloud'
  id: 'Target Pipeline'
  entrypoint: 'bash'
  # allowExitCodes: [1]
  automapSubstitutions: false
  args:
  - -xe
  - -c
  - |

    BACKEND=$(pwd)
    echo $BACKEND
    


# availableSecrets:
#   secretManager:
#   - versionName: projects/$PROJECT_ID/secrets/$_SECRET_NAME/versions/1
#     env: 'TEST_CI'

options:
  logging: CLOUD_LOGGING_ONLY
