steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_BACKEND:$TAG_NAME', './backend']
  id: 'Build backend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_BACKEND:$TAG_NAME']
  id: 'Push backend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_FRONTEND:$_TAG_NAME_FRONTEND', './frontend']
  id: 'Build Frontend'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_FRONTEND:$_TAG_NAME_FRONTEND']
  id: 'Push Frontend'

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |

    gcloud deploy apply --file deploy/pipeline.yaml --region $LOCATION
    gcloud deploy apply --file deploy/dev.yaml --region $LOCATION

    gcloud deploy releases create 'app1-release-${SHORT_SHA}' --delivery-pipeline test-cd-pipeline --region $LOCATION 
#--from-k8s-manifest=./kubernetes/app.yaml

- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - run
  - --filename=./kubernetes/app.yaml
  - --image=grc.io/$LOCATION-docker.pkg.dev/$PROJECT_ID/$_ARTIFACT_REPO/$_BACKEND:$TAG_NAME
  - --location=$LOCATION
  - --cluster=$_K8_CLUSTER

options:
  logging: CLOUD_LOGGING_ONLY
